#!/usr/bin/env bash
set -e

# ========== Êó•ÂøóÈÖçÁΩÆ ==========
LOG_FILE="/var/log/xanmod_optimization.log"
{
echo "================================================================"
echo "üïí ËÑöÊú¨ÂêØÂä®Êó∂Èó¥: $(date)"
echo "üöÄ ÂºÄÂßãÔºöÂá∫Âè£ÊúçÂä°Âô®ÁΩëÁªú‰ºòÂåñËÑöÊú¨ÔºàXanMod + BBRv3 + Âä®ÊÄÅÂª∂Ëøü‰ºòÂåñÔºâ"
echo "üíæ Êó•ÂøóÊñá‰ª∂: $LOG_FILE"
echo "================================================================"

> "$LOG_FILE"

# ========== 1. ÂÆâË£ÖÂøÖË¶Å‰æùËµñ ==========
install_dependencies() {
    echo "üîç Ê£ÄÊü•Âπ∂ÂÆâË£ÖÂøÖË¶Å‰æùËµñ..."
    REQUIRED_PKGS=("curl" "wget" "gpg" "dirmngr" "iproute2" "ca-certificates" "bc" "iputils-ping" "util-linux")
    MISSING_PKGS=()

    for pkg in "${REQUIRED_PKGS[@]}"; do
        if ! dpkg -l "$pkg" 2>/dev/null | grep -q "^ii"; then
            MISSING_PKGS+=("$pkg")
        fi
    done

    if [ ${#MISSING_PKGS[@]} -gt 0 ]; then
        echo "üì¶ ÂÆâË£Ö‰æùËµñ: ${MISSING_PKGS[*]}..."
        apt update
        DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends "${MISSING_PKGS[@]}" </dev/null
        echo "‚úÖ ‰æùËµñÂÆâË£ÖÂÆåÊàê"
    else
        echo "‚úÖ ÊâÄÊúâ‰æùËµñÂ∑≤ÂÆâË£Ö"
    fi
}
install_dependencies

# ========== 2. ÂÜÖÊ†∏Ê£ÄÊµã ==========
KERNEL_VERSION="6.15.3-x64v3-xanmod1"
CURRENT_KERNEL=$(uname -r)
IS_XANMOD=0
[[ "$CURRENT_KERNEL" == *"$KERNEL_VERSION"* ]] && IS_XANMOD=1

echo "‚ÑπÔ∏è ÂΩìÂâçÂÜÖÊ†∏: $CURRENT_KERNEL"
echo "‚ÑπÔ∏è ÁõÆÊ†áÂÜÖÊ†∏: $KERNEL_VERSION"
echo "‚ÑπÔ∏è ÂÜÖÊ†∏ÂåπÈÖçÁä∂ÊÄÅ: $([ $IS_XANMOD -eq 1 ] && echo ‚ÄúÊòØ‚Äù || echo ‚ÄúÂê¶‚Äù)"

# ========== 3. Â§á‰ªΩ ==========
echo "üîß Â§á‰ªΩÁ≥ªÁªüÈÖçÁΩÆ..."
BACKUP_TIME=$(date +%Y%m%d_%H%M%S)
cp /etc/sysctl.conf /etc/sysctl.conf.bak.$BACKUP_TIME
[ -f /etc/rc.local ] && cp /etc/rc.local /etc/rc.local.bak.$BACKUP_TIME
mkdir -p /etc/sysctl.d/backups

echo "‚úÖ Â§á‰ªΩÂÆåÊàê"
echo "üìå Â§á‰ªΩÊñá‰ª∂:"
echo "  - /etc/sysctl.conf.bak.$BACKUP_TIME"
echo "  - /etc/rc.local.bak.$BACKUP_TIME"

# ========== 4. ÂÆâË£Ö XanMod ÂÜÖÊ†∏ ==========
if [ "$IS_XANMOD" -eq 0 ]; then
  echo "üìÖ ÂÆâË£Ö XanMod ÂÜÖÊ†∏ $KERNEL_VERSION..."
  echo 'deb [signed-by=/usr/share/keyrings/xanmod-kernel.gpg] https://deb.xanmod.org releases main' | tee /etc/apt/sources.list.d/xanmod-kernel.list >/dev/null

  echo "üîë ‰∏ãËΩΩGPGÂØÜÈí•..."
  if ! wget -qO - https://dl.xanmod.org/gpg.key | gpg --dearmor | tee /usr/share/keyrings/xanmod-kernel.gpg >/dev/null 2>/dev/null; then
    echo "‚ö†Ô∏è ‰∏ªÂØÜÈí•Â§±Ë¥•Ôºå‰ΩøÁî®Â§áÁî®Âú∞ÂùÄ..."
    wget -qO - https://203.55.176.82:21569/down/BVwPEZcfSAlF.key | gpg --dearmor -o /usr/share/keyrings/xanmod-kernel.gpg 2>/dev/null
  fi

  apt update >/dev/null 2>&1
  DEBIAN_FRONTEND=noninteractive apt install -y linux-image-$KERNEL_VERSION </dev/null
  grub-set-default 0
  update-grub
  echo "‚úÖ ÂÜÖÊ†∏ÂÆâË£ÖÂÆåÊàê"
else
  echo "‚úÖ Â∑≤ËøêË°åÁõÆÊ†áÂÜÖÊ†∏: $KERNEL_VERSION"
fi

# ========== 5. ÁΩëÁªúÊ†àÊ£ÄÊµã ==========
HAS_IPV4=0
HAS_IPV6=0
ip -4 addr show | grep -q "inet" && HAS_IPV4=1
ip -6 addr show | grep -q "inet6" && HAS_IPV6=1

echo -e "\nüì° ÁΩëÁªúÊ†àÊ£ÄÊµãÁªìÊûú:"
echo "IPv4 ÊîØÊåÅ: $([ "$HAS_IPV4" -eq 1 ] && echo ‚úÖ || echo ‚ùå)"
echo "IPv6 ÊîØÊåÅ: $([ "$HAS_IPV6" -eq 1 ] && echo ‚úÖ || echo ‚ùå)"

# ========== 6. Áî®Êà∑ËæìÂÖ•Âª∂ËøüÂÄº ==========
if [ "$HAS_IPV4" -eq 1 ]; then
  while true; do
    read -p "üìè ËØ∑ËæìÂÖ• IPv4 ÁΩëÁªúÂª∂Ëøü (ms 1-1000): " IPV4_LATENCY
    if [[ "$IPV4_LATENCY" =~ ^[0-9]+$ ]] && [ "$IPV4_LATENCY" -ge 1 ] && [ "$IPV4_LATENCY" -le 1000 ]; then
      echo "üìù IPv4 Âª∂Ëøü: ${IPV4_LATENCY}ms"
      break
    else
      echo "‚ùå ËæìÂÖ•Êó†ÊïàÔºåËØ∑ÈáçËØï (1-1000)"
    fi
  done
fi

if [ "$HAS_IPV6" -eq 1 ]; then
  while true; do
    read -p "üìè ËØ∑ËæìÂÖ• IPv6 ÁΩëÁªúÂª∂Ëøü (ms 1-1000): " IPV6_LATENCY
    if [[ "$IPV6_LATENCY" =~ ^[0-9]+$ ]] && [ "$IPV6_LATENCY" -ge 1 ] && [ "$IPV6_LATENCY" -le 1000 ]; then
      echo "üìù IPv6 Âª∂Ëøü: ${IPV6_LATENCY}ms"
      break
    else
      echo "‚ùå ËæìÂÖ•Êó†ÊïàÔºåËØ∑ÈáçËØï (1-1000)"
    fi
  done
fi

# ========== ÂêéÁª≠ÁΩëÁªú‰ºòÂåñÁ≠âÈÄªËæë‰øùÁïô‰∏çÂèò ==========
# ÂèØÂ∞ÜÂª∂ËøüÂÄº‰º†ÂÖ• apply_latency_optimization ÂáΩÊï∞Á≠âÈÄªËæë‰∏≠ÁªßÁª≠Â§ÑÁêÜ

} | tee -a "$LOG_FILE" 2>&1

exit 0
